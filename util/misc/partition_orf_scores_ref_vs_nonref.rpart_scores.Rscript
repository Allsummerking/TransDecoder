#!/usr/bin/env Rscript

#options(stringsAsFactors = FALSE)

library('caret')
library('rpart')
library('rpart.plot')


main = function () {
    
    args<-commandArgs(TRUE)

    if (length(args) == 0) {
        stop("require param: cds.longest.scores")
    }

    data_file = args[1]
    
    data = read.table(data_file, header=T, com='', row.names=1)

    ## filter out non-ref orfs in non-random data
    #data = data[ union(which(data$reforf == "YES"), grep("rand", rownames(data))), ]
    

    ## length normalize
    
    target_data = len_normalize_adj(data)
    
    write.table(target_data, paste0(data_file, '.adj.data'), quote=F, sep="\t")


    
    rand_indices = grep("rand", rownames(target_data))
    rownames(target_data) = NULL

    
        
    #trctrl = trainControl(method='repeatedcv', number=10, repeats=3)
    #
    #f = as.formula(reforf ~ .)
    #
    #t = train(f, target_data, method='rpart',
    #          trControl=trctrl,
    #          tuneLength = 10)


    t = rpart(reforf ~ ., target_data)
    
    print(t)
    
    pdf(paste0(data_file, ".rpart.results.pdf"))
    #rpart.plot(t$finalModel)

    rpart.plot(t)
    
    boxplot(target_data[target_data$reforf == "YES",][, c('score_1', 'score_2', 'score_3', 'score_4', 'score_5', 'score_6')], main='ref orfs', outline=F)
    abline(h=0, col='blue')
    
    boxplot(target_data[target_data$reforf == "NO",][, c('score_1', 'score_2', 'score_3', 'score_4', 'score_5', 'score_6')], main='non-ref orfs', outline=F)
    abline(h=0, col='red')

    boxplot(target_data[rand_indices,][, c('score_1', 'score_2', 'score_3', 'score_4', 'score_5', 'score_6')], main='random orfs', outline=F)
    abline(h=0, col='red')

    
    dev.off()
    message("done")
    
    
    
    
}

len_normalize_adj = function(data) {

        
    scores = data[,c('score_1', 'score_2', 'score_3', 'score_4', 'score_5', 'score_6')]

    len_norm_scores = sweep(scores, 1, data$seq_length, '/')

    s1_is_max = (data$score_1 > apply(data[,c('score_2', 'score_3', 'score_4', 'score_5', 'score_6')], 1, max))
    
    len_norm_scores = cbind(seq_length=data$seq_length, len_norm_scores, s1_is_max=s1_is_max, reforf=data$reforf)
    
    return(len_norm_scores)
    
}
    

main()
    
