## 2017-August-16 v4.0.3 release

-bugfix - allows target transcriptome to be located outside of the working directory.
         - option processing corrected for --retain_long_orfs_mode
         -non-fatal if non-GATC char encountered while building start pwm



v0.0.1 and v0.0.2 are now removed.




## 2017-August-4   v4.0.0 release

-single best orf now selected by default.  If more than the single best orf is wanted, use the  --all_good_orfs  parameter.
-start codon refinement is now done by default. To turn it off and get the original behavior of extending to the longest orf position, use parameter:  --no_refine_starts
-cdhit has been removed and replaced by our own fast method for removing redundancies.
-minimum orf length to retain regardless of coding metrics is set based on GC content.


## v3.0.2 release Oct 31, 2016

minor bugfix release - when checking for required utilities to be installed, doesn't require ^/ in path



## v3.0.0 release April 26, 2016

TransDecoder v3.0.0 includes the following changes:

TransDecoder.LongOrfs now includes parameter '--gene_trans_map ' as a way to retain the gene identifier information. In the case of Cufflinks and Trinity, the gene identifiers will automatically be recognized and retained. For PASA and other inputs, it is necessary to provide the gene-to-transcript identifier mappings in order to generate isoform-clustered output files (gff3).

TransDecoder.Predict now includes flag ' --single_best_orf ' to retain only the single 'best' ORF per transcript. ORFs are prioritized according to homology information (if given the blast and pfam results) and by sequence length, with longer ORFs preferred.

Codon phase information is now included in the GFF3 output files.

The .mRNA files that were generated by default for genome-free TransDecoder runs are now deprecated, but of course the .cds and .pep files are provided.

The sample data sets include examples for running TransDecoder in a few different contexts, including starting from Trinity, PASA, or Cufflinks data.

More useful logging information is provided to it's clearer as to how many orfs are being retained and which are being eliminated along the way.



## 2016-03-11 v2.1 release
-added cpu parameter to TransDecoder.predict
-retaining gene identifier information from cufflinks output
-added sample data and examples for the various use-cases.





## 2015-01-26   v2.0 release

-overhauled the build
    -removed the active searching of Pfam and all MPI-related funcitonality
    -runs in 2 phase:
        -TransDecoder.LongOrfs : extracs the long ORFs
        -TransDecoder.Predict : predicts the likely coding regions among the ORFs
            -step can use Pfam and blastp search results (blast support is a new addition)
    -run Pfam and/or BlastP searches directly or try using "HPC GridRunner" (http://HpcGridRunner.github.io)

-moved to github 



## 2014-07-04

-added 'make simple' to build just the essential components involving parafly and cdhit
-removed the 'cds.' prefix from the pep and cds sequence accessions.

